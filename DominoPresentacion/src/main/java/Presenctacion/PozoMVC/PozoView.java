/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Presenctacion.PozoMVC;

import Dominio.Ficha;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Frame;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 *
 * @author INEGI
 */
public class PozoView extends javax.swing.JDialog {

    private PozoModel pozoModel;
    private PozoController pozoController; // Agregar controlador

    public PozoView(Frame parent, boolean modal, PozoModel pozoModel) {
        super(parent, modal);
        this.pozoModel = pozoModel; // Inicializa el modelo
        setBackground(Color.GREEN);
        getContentPane().setBackground(Color.GREEN);
        initComponents();
        mostrarFichasEnPozo();
    }

    public void setController(PozoController pozoController) {
        this.pozoController = pozoController; // Asigna el controlador
    }

    public void mostrarFichasEnPozo() {
        this.getContentPane().removeAll(); // Limpiar el panel anterior
        List<Ficha> fichas = pozoModel.getFichasPozo();

        for (Ficha ficha : fichas) {
            JPanel panelFicha = crearPanelFicha(ficha);
            this.add(panelFicha); // Añadir el panel de la ficha al contenedor
        }

        this.revalidate();
        this.repaint();
    }

    private JPanel crearPanelFicha(Ficha ficha) {
        JPanel panelFicha = new JPanel();
        panelFicha.setPreferredSize(new Dimension(60, 30)); // Establecer tamaño del panel
        ImageIcon ladoIzquierdo = cargarImagenPorValor(ficha.getEspacio1());
        ImageIcon ladoDerecho = cargarImagenPorValor(ficha.getEspacio2());
        panelFicha.add(new JLabel(ladoIzquierdo));
        panelFicha.add(new JLabel(ladoDerecho));

        // Añadir evento de clic para eliminar la ficha
        panelFicha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pozoController.eliminarFicha(ficha); // Llama al controlador para eliminar la ficha
            }
        });

        return panelFicha;
    }

    void mostrarMensaje(String mensaje) {
        javax.swing.JOptionPane.showMessageDialog(this, mensaje);
    }

    private ImageIcon cargarImagenPorValor(int valor) {
        String rutaBase = "C:\\Users\\Serva\\Downloads\\ProyectoDominoArquitectura-main\\ProyectoDominoArquitectura-main\\ProyectoDominoArquitectura-main\\imagenes\\";
        String rutaImagen = rutaBase + valor + ".png";
        ImageIcon icon = new ImageIcon(rutaImagen);
        if (icon.getIconWidth() == -1) {
            System.out.println("Imagen no encontrada: " + rutaImagen);
        }
        return icon;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            PozoModel model = new PozoModel(); // Se crea un modelo vacío para pruebas
            PozoView view = new PozoView(new Frame(), true, model);
            view.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
